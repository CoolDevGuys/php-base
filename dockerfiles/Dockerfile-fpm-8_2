FROM php:8.2-fpm-alpine as dependencies

LABEL maintainer="Cooldevguys"

COPY ./scripts/install-rabbitmq.sh /root/

RUN apk --update upgrade \
    && apk add --no-cache --virtual .phpize-deps $PHPIZE_DEPS \
    && apk add --no-cache --virtual .build-deps \
    make \
    autoconf \
    automake \
    gcc  \
    g++ \
    rabbitmq-c-dev \
    pcre-dev \
    libzip-dev \
    linux-headers

RUN apk add  \
    make \
    icu-dev \
    zip \
    zlib \
    libzip-dev \
    git  \
    bash  \
    wget  \
    curl \
    rabbitmq-c \
    supervisor \
    binutils \
    && docker-php-ext-install -j$(nproc) \
    opcache \
    bcmath \
    intl \
    zip \
    pdo_mysql \
    pcntl

RUN pecl install apcu igbinary redis xdebug \
    && sh /root/install-rabbitmq.sh \
    && docker-php-ext-enable \
    apcu \
    opcache \
    amqp \
    igbinary \intl \pcntl \
    redis \
    xdebug

RUN pecl clear-cache \
    && apk del .phpize-deps \
    && apk del .build-deps \
    && rm -rf /tmp/* /var/cache/* /var/www/html/* \
    && docker-php-source delete \
    rm -f /sbin/apk && rm -rf /etc/apk && rm -rf /lib/apk && rm -rf /usr/share/apk && rm -rf /var/lib/apk

RUN find "$(php-config --extension-dir)" -name '*.so' -type f -exec strip --strip-all {} \;

COPY ./config/conf.d/* /usr/local/etc/php/conf.d/
COPY ./config/fpm/php-fpm.conf /usr/local/etc/php-fpm.conf
COPY ./config/fpm/www.conf /usr/local/etc/php-fpm.d/www.conf

FROM dependencies as base

RUN mkdir /usr/local/etc/dev-extensions && mv /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini /usr/local/etc/dev-extensions/ &&  \
    mv /usr/local/etc/php/conf.d/docker-php-ext-opcache.ini /usr/local/etc/dev-extensions/ &&\
    mv /usr/local/etc/php/php.ini-production /usr/local/etc/php/php.ini

COPY /scripts/docker-php-entrypoint /usr/local/bin/
COPY /scripts/check-extensions /usr/local/bin/pre-boot/

ENTRYPOINT ['/usr/local/bin/docker-php-entrypoint']

FROM dependencies as composer

WORKDIR /app

ENV XDEBUG_MODE=off

RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

RUN mkdir vendor

RUN chown -R www-data:www-data .

USER www-data

